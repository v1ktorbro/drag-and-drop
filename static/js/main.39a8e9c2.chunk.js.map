{"version":3,"sources":["components/AddTask.js","components/DragAndDrop.js","utils/data.js","App.js","index.js"],"names":["AddTask","onNewTask","taskRef","React","useRef","className","onSubmit","evt","preventDefault","current","value","ref","type","placeholder","required","pattern","DragAndDrop","defaultData","useState","list","setList","dragging","setDragging","draggItem","dragNode","handleDragEnter","e","params","currentItem","target","oldList","newList","JSON","parse","stringify","groupIndex","tasks","splice","taskIndex","handleDragEnd","removeEventListener","getStyled","newTask","unshift","map","group","onDragEnter","length","key","title","task","draggable","onDragStart","addEventListener","handleDragStart","data","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"8KA2BeA,MAzBf,YAAgC,IAAbC,EAAY,EAAZA,UACTC,EAAUC,IAAMC,OAAO,IAU7B,OACI,0BAAMC,UAAU,gBAAgBC,SATf,SAACC,GAClBA,EAAIC,iBACJP,EACIC,EAAQO,QAAQC,OAEpBR,EAAQO,QAAQC,MAAQ,KAKpB,2BACIC,IAAKT,EACLU,KAAK,OACLP,UAAU,aACVQ,YAAY,iHACZC,UAAQ,EAACC,QAAQ,kDAErB,4BAAQH,KAAK,SAASP,UAAU,mBAAhC,sDC6DGW,MAhFf,YAAsC,IAAfC,EAAc,EAAdA,YAAc,EACTd,IAAMe,SAASD,GADN,mBAC1BE,EAD0B,KACpBC,EADoB,OAEDjB,IAAMe,UAAS,GAFd,mBAE1BG,EAF0B,KAEhBC,EAFgB,KAG3BC,EAAYpB,IAAMC,SAClBoB,EAAWrB,IAAMC,SAiBjBqB,EAAkB,SAACC,EAAGC,GACxB,IAAMC,EAAcL,EAAUd,QAC3BiB,EAAEG,SAAWL,EAASf,SACrBW,GAAQ,SAACU,GACL,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUJ,IAGxC,OAFAC,EAAQJ,EAAOQ,YAAYC,MAAMC,OAAOV,EAAOW,UAAW,EAAGP,EAAQH,EAAYO,YAAYC,MAAMC,OAAOT,EAAYU,UAAW,IACjIf,EAAUd,QAAUkB,EACbI,MAKbQ,EAAgB,SAAhBA,IACFjB,GAAY,GACZE,EAASf,QAAQ+B,oBAAoB,UAAWD,GAChDhB,EAAUd,QAAU,KACpBe,EAASf,QAAU,MAGjBgC,EAAY,SAACd,GACf,IAAMC,EAAcL,EAAUd,QAC9B,OAAIkB,EAAOQ,aAAeP,EAAYO,YAClCR,EAAOW,YAAcV,EAAYU,UACtB,6BAER,aAGX,OACI,6BAASjC,UAAU,OACf,kBAAC,EAAD,CAASJ,UA7CK,SAACyC,GACnBtB,GAAQ,SAACU,GACL,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUJ,IAExC,OADAC,EAAQ,GAAGK,MAAMO,QAAQD,GAClBX,QA0CP,yBAAK1B,UAAU,eACdc,EAAKyB,KAAI,SAACC,EAAOV,GAAR,OACN,yBACIW,YAAazB,IAAawB,EAAMT,MAAMW,OAAS,SAACrB,GAAOD,EAAgBC,EAAG,CAACS,aAAYG,UAAW,KAAO,KACzGjC,UAAU,aACV2C,IAAKb,GAEL,wBAAI9B,UAAU,cACTwC,EAAMI,OAEX,wBAAI5C,UAAU,cACTwC,EAAMT,MAAMQ,KAAI,SAACM,EAAMZ,GAAP,OACb,wBACIa,WAAS,EACTC,YAAa,SAAC1B,IApDlB,SAACA,EAAGC,GACxBL,GAAY,GACZC,EAAUd,QAAUkB,EACpBH,EAASf,QAAUiB,EAAEG,OACrBL,EAASf,QAAQ4C,iBAAiB,UAAWd,GAgDAe,CAAgB5B,EAAG,CAACS,aAAYG,eACrDQ,YAAa,SAACpB,GAAD,OAAOD,EAAgBC,EAAG,CAACS,aAAYG,eACpDjC,UAAWgB,EAAWoB,EAAU,CAACN,aAAYG,cAAc,YAC3DU,IAAKV,GACPY,cC9DbK,EAXJ,CACT,CACEN,MAAO,4EACPb,MAAO,CAAC,IAAK,IAAK,MAEpB,CACEa,MAAO,6CACPb,MAAO,CAAC,IAAK,OCKJoB,MANf,WACE,OACE,kBAAC,EAAD,CAAavC,YAAaA,KCJ9BwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,cAAc,c","file":"static/js/main.39a8e9c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction AddTask ({onNewTask}) {\r\n    const taskRef = React.useRef('');\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        onNewTask(\r\n            taskRef.current.value\r\n        );\r\n        taskRef.current.value = '';\r\n    }\r\n    \r\n    return (\r\n        <form className=\"dnd__add-task\" onSubmit={handleSubmit} >\r\n            <input \r\n                ref={taskRef}\r\n                type=\"text\" \r\n                className=\"dnd__input\" \r\n                placeholder=\"Введите новую задачу\"\r\n                required pattern=\"[A-Za-zА-Яа-я -0-9]{1,40}\" \r\n            />\r\n            <button type=\"submit\" className=\"dnd__btn-submit\">Добавить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport AddTask from './AddTask.js'\r\n\r\nfunction DragAndDrop ({defaultData}) {\r\n    const [list, setList] = React.useState(defaultData);\r\n    const [dragging, setDragging] = React.useState(false);\r\n    const draggItem = React.useRef();\r\n    const dragNode = React.useRef();\r\n\r\n    const handleNewTask = (newTask) => {\r\n        setList((oldList) => {\r\n            let newList = JSON.parse(JSON.stringify(oldList));\r\n            newList[0].tasks.unshift(newTask)\r\n            return newList;\r\n        })\r\n    }\r\n\r\n    const handleDragStart = (e, params) => {\r\n        setDragging(true);\r\n        draggItem.current = params;\r\n        dragNode.current = e.target;\r\n        dragNode.current.addEventListener('dragend', handleDragEnd);\r\n    }\r\n\r\n    const handleDragEnter = (e, params) => {\r\n        const currentItem = draggItem.current;\r\n        if(e.target !== dragNode.current) {\r\n            setList((oldList) => {\r\n                let newList = JSON.parse(JSON.stringify(oldList));\r\n                newList[params.groupIndex].tasks.splice(params.taskIndex, 0, newList[currentItem.groupIndex].tasks.splice(currentItem.taskIndex, 1));\r\n                draggItem.current = params;\r\n                return newList;\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleDragEnd = () => {\r\n        setDragging(false);\r\n        dragNode.current.removeEventListener('dragend', handleDragEnd);\r\n        draggItem.current = null;\r\n        dragNode.current = null;\r\n    }\r\n\r\n    const getStyled = (params) => {\r\n        const currentItem = draggItem.current;\r\n        if (params.groupIndex === currentItem.groupIndex &&\r\n            params.taskIndex === currentItem.taskIndex) {\r\n                return \"dnd__task dnd__task_active\"\r\n            }\r\n        return \"dnd__task\"\r\n    }\r\n\r\n    return (\r\n        <section className=\"dnd\">\r\n            <AddTask onNewTask={handleNewTask} />\r\n            <div className=\"dnd__groups\" >\r\n            {list.map((group, groupIndex) => (\r\n                <div \r\n                    onDragEnter={dragging && !group.tasks.length ? (e) => {handleDragEnter(e, {groupIndex, taskIndex: 0})} : null}\r\n                    className=\"dnd__group\" \r\n                    key={groupIndex} \r\n                >\r\n                    <h2 className=\"dnd__title\">\r\n                        {group.title}\r\n                    </h2>\r\n                    <ul className=\"dnd__tasks\">\r\n                        {group.tasks.map((task, taskIndex) => (\r\n                            <li \r\n                                draggable\r\n                                onDragStart={(e) => {handleDragStart(e, {groupIndex, taskIndex})}}\r\n                                onDragEnter={(e) => handleDragEnter(e, {groupIndex, taskIndex})}\r\n                                className={dragging ? getStyled({groupIndex, taskIndex}) : \"dnd__task\"} \r\n                                key={taskIndex}\r\n                            >{task}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DragAndDrop;","const data = [\r\n    {\r\n      title: \"Нужно сделать\",\r\n      tasks: ['1', '2', '3' ]\r\n    },\r\n    {\r\n      title: \"Сделано\",\r\n      tasks: ['4', '5']\r\n    }\r\n  ]\r\n  \r\n  export default data ;","import React from 'react';\nimport './index.css';\nimport DragAndDrop from './components/DragAndDrop.js';\nimport defaultData from './utils/data.js'\n\n\nfunction App() {\n  return (\n    <DragAndDrop defaultData={defaultData} />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('.content')\n);\n\n"],"sourceRoot":""}